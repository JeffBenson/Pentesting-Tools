//Title:XSS Mutational URL Fuzzer
//Author: Jeff Benson

//Version:1.0
//Description: Inspired by exercises in the book "Gray Hat C# - A Hacker's Guide
//             To Creating and Automating Security Tools

using System;
using System.IO;
using System.Net;

namespace XSSMutationalFuzzer
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Clear();
            //User will pass URL in the command line as an argument enclosed in " "
            string url = args[0];

            //Code parses the URL and finds the index countr of "?"
            int index = url.IndexOf("?");

            //Code splits code into pieces and splits at the "&" character
            string[] parms = url.Remove(0, index + 1).Split('&');

            foreach (string parm in parms)
            {
                //Code appends "<xss>" into URL parameters to be passed to the HttpWebRequest
                string xssUrl = url.Replace(parm, parm + "fd<xss>sa");

                //Passes the parsed and tainted xssurl to the browser as a GET request
                HttpWebRequest request = (HttpWebRequest)WebRequest.Create(xssUrl);
                request.Method = "GET";
                string xssresp = string.Empty;

                //Recieves the response from the previos GET request, then stores it in the "xssresp" variable
                using (StreamReader rdr = new
                      StreamReader(request.GetResponse().GetResponseStream()))
                    xssresp = rdr.ReadToEnd();


                if (xssresp.Contains("<xss>"))
                {
                    Console.Clear();
                    Console.WriteLine("\nPossible XSS point found in parameter: " + parm);
                }
            }
            Console.ReadKey();
            Console.Clear();
        }
    }
}
